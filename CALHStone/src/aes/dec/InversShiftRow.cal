package aes.dec;

import aes.common.Constants.*;

actor InversShiftRow()
	int Round,
	int NB,
	int Statement_In,
	int Statement_Update
		==>
			int NB_Out,
			int Done,
			int Statement_Out:

	
	bool goo := true;
	int nb := 0;
	int i := 0;
	int statemt[32];// := [0: for int i in 0 .. 31];
	
	int statemt_0;
	int statemt_1;
	int statemt_2;
	int statemt_3;
	int statemt_4;
	int statemt_5;
	int statemt_6;
	int statemt_7;
	int statemt_8;
	int statemt_9;
	int statemt_10;
	int statemt_11;
	int statemt_12;
	int statemt_13;
	int statemt_14;
	int statemt_15;
	int statemt_16;
	int statemt_17;
	int statemt_18;
	int statemt_19;
	int statemt_20;
	int statemt_21;
	int statemt_22;
	int statemt_23;
	int statemt_24;
	int statemt_25;
	int statemt_26;
	int statemt_27;
	int statemt_28;
	int statemt_29;
	int statemt_30;
	int statemt_31;
	
	read_first: action Round:[round], NB:[n], Statement_In:[statemt_0,statemt_1,statemt_2,statemt_3,statemt_4,statemt_5,statemt_6,statemt_7,statemt_8,statemt_9,
		statemt_10,statemt_11,statemt_12,statemt_13,statemt_14,statemt_15,statemt_16,statemt_17,statemt_18,statemt_19,
		statemt_20,statemt_21,statemt_22,statemt_23,statemt_24,statemt_25,statemt_26,statemt_27,statemt_28,statemt_29,statemt_30,statemt_31
	]  ==>
	guard
		goo = true
	do
		nb := n;
		
		i := round - 1;
		goo := false;
	end

	read_loop: action Statement_Update:[stmt_u] repeat 32 ==>
	guard
		goo = false
	do
		statemt := stmt_u;
	end
	
	output: action ==> Statement_Out:[statemt_0,statemt_1,statemt_2,statemt_3,statemt_4,statemt_5,statemt_6,statemt_7,statemt_8,statemt_9,
		statemt_10,statemt_11,statemt_12,statemt_13,statemt_14,statemt_15,statemt_16,statemt_17,statemt_18,statemt_19,
		statemt_20,statemt_21,statemt_22,statemt_23,statemt_24,statemt_25,statemt_26,statemt_27,statemt_28,statemt_29,statemt_30,statemt_31],  NB_Out:[nb], Done:[done,i_out]
	var
		int done:=0, 
		int i_out := i
		
	do
	
		if i < 1 then
			done := 1;
			goo := true;
		else
			done := 0;
			i := i - 1;
		end
	end

	case.Nb4: action ==>
	guard
		nb = 4
	var
		int temp
	do
      temp := invSbox[statemt_13 >> 4][statemt_13 & 0xf];
      statemt_13 := invSbox[statemt_9 >> 4][statemt_9 & 0xf];
      statemt_9 := invSbox[statemt_5 >> 4][statemt_5 & 0xf];
      statemt_5 := invSbox[statemt_1 >> 4][statemt_1 & 0xf];
      statemt_1 := temp;

      temp := invSbox[statemt_14 >> 4][statemt_14 & 0xf];
      statemt_14 := invSbox[statemt_6 >> 4][statemt_6 & 0xf];
      statemt_6 := temp;
      temp := invSbox[statemt_2 >> 4][statemt_2 & 0xf];
      statemt_2 := invSbox[statemt_10 >> 4][statemt_10 & 0xf];
      statemt_10 := temp;

      temp := invSbox[statemt_15 >> 4][statemt_15 & 0xf];
      statemt_15 := invSbox[statemt_3 >> 4][statemt_3 & 0xf];
      statemt_3 := invSbox[statemt_7 >> 4][statemt_7 & 0xf];
      statemt_7 := invSbox[statemt_11 >> 4][statemt_11 & 0xf];
      statemt_11 := temp;

      statemt_0 := invSbox[statemt_0 >> 4][statemt_0 & 0xf];
      statemt_4 := invSbox[statemt_4 >> 4][statemt_4 & 0xf];
      statemt_8 := invSbox[statemt_8 >> 4][statemt_8 & 0xf];
      statemt_12 := invSbox[statemt_12 >> 4][statemt_12 & 0xf];
	end

	case.Nb6: action ==>
	guard
		nb = 6
	var
		int temp
	do
      temp := invSbox[statemt_21 >> 4][statemt_21 & 0xf];
      statemt_21 := invSbox[statemt_17 >> 4][statemt_17 & 0xf];
      statemt_17 := invSbox[statemt_13 >> 4][statemt_13 & 0xf];
      statemt_13 := invSbox[statemt_9 >> 4][statemt_9 & 0xf];
      statemt_9 := invSbox[statemt_5 >> 4][statemt_5 & 0xf];
      statemt_5 := invSbox[statemt_1 >> 4][statemt_1 & 0xf];
      statemt_1 := temp;

      temp := invSbox[statemt_22 >> 4][statemt_22 & 0xf];
      statemt_22 := invSbox[statemt_14 >> 4][statemt_14 & 0xf];
      statemt_14 := invSbox[statemt_6 >> 4][statemt_6 & 0xf];
      statemt_6 := temp;
      temp := invSbox[statemt_18 >> 4][statemt_18 & 0xf];
      statemt_18 := invSbox[statemt_10 >> 4][statemt_10 & 0xf];
      statemt_10 := invSbox[statemt_2 >> 4][statemt_2 & 0xf];
      statemt_2 := temp;

      temp := invSbox[statemt_15 >> 4][statemt_15 & 0xf];
      statemt_15 := invSbox[statemt_3 >> 4][statemt_3 & 0xf];
      statemt_3 := temp;
      temp := invSbox[statemt_19 >> 4][statemt_19 & 0xf];
      statemt_19 := invSbox[statemt_7 >> 4][statemt_7 & 0xf];
      statemt_7 := temp;
      temp := invSbox[statemt_23 >> 4][statemt_23 & 0xf];
      statemt_23 := invSbox[statemt_11 >> 4][statemt_11 & 0xf];
      statemt_11 := temp;

      statemt_0 := invSbox[statemt_0 >> 4][statemt_0 & 0xf];
      statemt_4 := invSbox[statemt_4 >> 4][statemt_4 & 0xf];
      statemt_8 := invSbox[statemt_8 >> 4][statemt_8 & 0xf];
      statemt_12 := invSbox[statemt_12 >> 4][statemt_12 & 0xf];
      statemt_16 := invSbox[statemt_16 >> 4][statemt_16 & 0xf];
      statemt_20 := invSbox[statemt_20 >> 4][statemt_20 & 0xf];
	end
	
	case.Nb8: action ==>
	guard
		nb = 8
	var
		int temp
	do
      temp := invSbox[statemt_29 >> 4][statemt_29 & 0xf];
      statemt_29 := invSbox[statemt_25 >> 4][statemt_25 & 0xf];
      statemt_25 := invSbox[statemt_21 >> 4][statemt_21 & 0xf];
      statemt_21 := invSbox[statemt_17 >> 4][statemt_17 & 0xf];
      statemt_17 := invSbox[statemt_13 >> 4][statemt_13 & 0xf];
      statemt_13 := invSbox[statemt_9 >> 4][statemt_9 & 0xf];
      statemt_9 := invSbox[statemt_5 >> 4][statemt_5 & 0xf];
      statemt_5 := invSbox[statemt_1 >> 4][statemt_1 & 0xf];
      statemt_1 := temp;

      temp := invSbox[statemt_30 >> 4][statemt_30 & 0xf];
      statemt_30 := invSbox[statemt_18 >> 4][statemt_18 & 0xf];
      statemt_18 := invSbox[statemt_6 >> 4][statemt_6 & 0xf];
      statemt_6 := invSbox[statemt_26 >> 4][statemt_26 & 0xf];
      statemt_26 := invSbox[statemt_14 >> 4][statemt_14 & 0xf];
      statemt_14 := invSbox[statemt_2 >> 4][statemt_2 & 0xf];
      statemt_2 := invSbox[statemt_22 >> 4][statemt_22 & 0xf];
      statemt_22 := invSbox[statemt_10 >> 4][statemt_10 & 0xf];
      statemt_10 := temp;

      temp := invSbox[statemt_31 >> 4][statemt_31 & 0xf];
      statemt_31 := invSbox[statemt_15 >> 4][statemt_15 & 0xf];
      statemt_15 := temp;
      temp := invSbox[statemt_27 >> 4][statemt_27 & 0xf];
      statemt_27 := invSbox[statemt_11 >> 4][statemt_11 & 0xf];
      statemt_11 := temp;
      temp := invSbox[statemt_23 >> 4][statemt_23 & 0xf];
      statemt_23 := invSbox[statemt_7 >> 4][statemt_7 & 0xf];
      statemt_7 := temp;
      temp := invSbox[statemt_19 >> 4][statemt_19 & 0xf];
      statemt_19 := invSbox[statemt_3 >> 4][statemt_3 & 0xf];
      statemt_3 := temp;

      statemt_0 := invSbox[statemt_0 >> 4][statemt_0 & 0xf];
      statemt_4 := invSbox[statemt_4 >> 4][statemt_4 & 0xf];
      statemt_8 := invSbox[statemt_8 >> 4][statemt_8 & 0xf];
      statemt_12 := invSbox[statemt_12 >> 4][statemt_12 & 0xf];
      statemt_16 := invSbox[statemt_16 >> 4][statemt_16 & 0xf];
      statemt_20 := invSbox[statemt_20 >> 4][statemt_20 & 0xf];
      statemt_24 := invSbox[statemt_24 >> 4][statemt_24 & 0xf];
      statemt_28 := invSbox[statemt_28 >> 4][statemt_28 & 0xf];
	end		
      
	schedule fsm init:
		init	(read_first) --> busy;
		init	(read_loop)  --> busy;
		busy	(case)		 --> out;
		out 	(output)	 --> init;
	end
	
end