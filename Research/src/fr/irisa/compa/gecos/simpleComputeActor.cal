package fr.irisa.compa.gecos;

import fr.irisa.common.Simulation.*;

@gecos (tile="128",actors="4")
actor simpleComputeActor () int(size=32) input ==> int(size=32) output :

	int N = 512;
	int M = 512;
//	int inputArray[N*M];
//	int outputArray[N*M];

	@gecos (input="2,512,512",output="2,512,512")
	sendData: action input:[inputArray] repeat N*M ==> 
					output:[outputArray] repeat N*M  
	var
		int outputArray[N*M]
	do
	
	
	
	

//	
//		inputArray := inArray;
//
//		print_cyclecount();
	
		/*foreach int i in 0 .. N - 1
		do
			outArray[i] := 0;
			outArray[i*N+0] := 0;
		end */  
	
		
		foreach  int i in 0 .. N -1 
		do
			foreach int j in 0 .. M - 1
			do
				if ( (i > 0) && (j > 0) ) then
					outputArray[i*M+j] := (outputArray[i*M+j-1]*20 + outputArray[i*M-M+j]*35 + 
						outputArray[(i-1)*M+j-1]*21 + inputArray[i*M+j]*43)/4 + (outputArray[i*M+j-1]*13 + 
							outputArray[i*M-M+j]*53 + outputArray[(i-1)*M+j-1]*27 + inputArray[i*M+j]*43)/45 +
							(outputArray[i*M+j-1]*outputArray[i*M+j-1] + outputArray[i*M-M+j]*outputArray[i*M-M+j] + 
							outputArray[(i-1)*M+j-1]*outputArray[(i-1)*M+j-1] + inputArray[i*M+j]*inputArray[i*M+j])/79;
				else
					outputArray[i*N+j] := 0;	
				end
			end
		end  
		
	//	outArray := outputArray;
//		
	//	print_cyclecount();
	 /* foreach  int i in 1 .. N -1 
		do
			foreach int j in 1 .. M - 1
			do
				outArray[j] := outArray[j-1] + 
							outArray[j] + inArray[j];
			end
		end  */
		
	end 

end