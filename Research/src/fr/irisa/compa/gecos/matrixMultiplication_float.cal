package fr.irisa.compa.gecos;
import fr.irisa.common.Simulation.*;

@gecos (tile="64",actors="4")
actor matrixMultiplication_float () float inputA, float inputB ==> float output :

	int N = 16;
	int M = 16;
//	int inputArrayA[N*M];
//	int outputArray[N*M];
//	int inputArrayB[N*M];



	@gecos (inputA="2,512,512",inputB="2,512,512",output="2,512,512")
	sendData: action inputA:[inArrayA] repeat N*M, inputB:[inArrayB] repeat N*M ==> 
					output:[outArray] repeat N*M  
	var

		float outArray[N*M]
	do
//		inputArrayA := inArrayA;
//		inputArrayB := inArrayB;
		/*foreach int i in 0 .. N - 1
		do
			outArray[i] := 0;
			outArray[i*N+0] := 0;
		end */  
//		print_cyclecount();
		
		foreach  int i in 0 .. N -1 
		do
			foreach int j in 0 .. N - 1
			do
				foreach int k in 0 .. N-1
				do
					if ( k = 0 ) then
						outArray[i*N+j] := inArrayA[i*N+k] * inArrayB[k*N+j];
					else
						outArray[i*N+j] := outArray[i*N+j] + inArrayA[i*N+k] * inArrayB[k*N+j];
					end
				end
			end
	//		print_cyclecount();
		end  
	 /* foreach  int i in 1 .. N -1 
		do
			foreach int j in 1 .. M - 1
			do
				outArray[j] := outArray[j-1] + 
							outArray[j] + inArray[j];
			end
		end  */
//		print_cyclecount();
//		
//		outArray := outputArray;
		
	end 

end