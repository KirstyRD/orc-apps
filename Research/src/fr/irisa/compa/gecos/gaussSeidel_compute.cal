package fr.irisa.compa.gecos;
import fr.irisa.common.Simulation.*;

@gecos (tile="8",actors="4")
actor gaussSeidel_compute () int(size=32) input ==> int(size=32) output :

	int N = 64;
	int TS = 8;
	
//	int inArray[N*N];
//	int outArray[N*N];
//	
	@gecos (input="2,64,64",output="2,64,64")
	sendData: action input:[inArray] repeat N*N ==> 
					output:[outArray] repeat N*N  
	var
		int outArray[N*N]
	do
//		inArray := inArrayPort;
//
//		print_cyclecount();

		foreach int i in 0 .. N - 1
		do
			foreach int j in 0 .. N -1 do 
				outArray[i*N+j] := inArray[i*N+j];
			end
		end   
		foreach int t in 1 .. TS-1 do 
			foreach  int i in 1 .. N - 2 do
				foreach int j in 1 .. N - 2 do
			
					outArray[i*N+j] := (outArray[i*N+j] + outArray[i*N+j-1] + outArray[i*N+j+1] + 
									 outArray[(i+1)*N+j] + outArray[(i-1)*N+(j)])/5;
				end
			end  
		end
	 /* foreach  int i in 1 .. N -1 
		do
			foreach int j in 1 .. M - 1
			do
				outArray[j] := outArray[j-1] + 
							outArray[j] + inArray[j];
			end
		end  */
//		print_cyclecount();
//		
//		outArrayPort := outArray;
		
	end 

end