package org.ietr.trackImg;
import std.stdio.Source.*;

unit DisplayNative:

	
	/**
	 * Initializes the given display.
	 */
	@native procedure displayRGB_init(int winWidth, int winHeight, int pictureWidth, int pictureHeight) end

	/**
	 * Displays a picture. Sizes are in pixels.
	 */
	@native procedure displayRGB_displayPicture(uint(size=8) pictureBufferY[352 * 200],
	                                            uint(size=8) pictureBufferU[352 * 200],
	                                            uint(size=8) pictureBufferV[352 * 200],
	                                            int(size=16) pictureWidth, int(size=16) pictureSize) end
	
	/**
	 * Gets flags of display
	 */
	@native function displayRGB_getFlags ( ) --> uint(size=8) end

	/**
	 * Gets the number of frames the display should decode and show
	 * before closing application.
	 */
	@native function displayRGB_getNbFrames() --> int end

	/**
	 * Initializes the compare module.
	 */
	@native procedure compareRGB_init() end

	/**
	 * Compares a picture. Sizes are in pixels.
	 */
	@native procedure compareRGB_comparePicture(uint(size=8) pictureBufferY[352 * 200],
	                                            uint(size=8) pictureBufferU[352 * 200],
	                                            uint(size=8) pictureBufferV[352 * 200],
	                                            int(size=16) pictureWidth, int(size=16) pictureSize) end

	/**
	 * Initializes the frame rate.
	 */
	@native procedure fpsPrintInit() end

	/**
	 * Prints the current frame rate.
	 */
	@native procedure fpsPrintNewPicDecoded() end
	
	/**
	 * Initializes the given display.
	 */
	@native procedure displayRGB444_init(int(size=16) winWidth, int(size=16) winHeight,
										int(size=16) pictureWidth, int(size=16) pictureHeight) end
	/**
	 * Gets event.
	 */
	@native procedure displayRGB_getEvent() end

	/**
	 * Displays a picture. The sizes are in pixels.
	 */
	@native procedure displayRGB444_displayPicture(uint(size=8) pictureBufferY[352 * 200],
											       int(size=8) pictureBufferU[352 * 200],
	                                               uint(size=8) pictureBufferV[352 * 200],
	                                               int(size=16) pictureWidth, int(size=16) pictureHeight) end
	                                               
	@native procedure readRGBpicture(uint(size=8) R[352 * 200], uint(size=8) G[352 * 200], uint(size=8) B[352 * 200]) end
	
	@native procedure displayTrackRect(int x, int y, int w, int h) end
	
	@native function get_pict_width()  --> int end
	
	@native function get_pict_height() --> int end
	
	@native procedure get_mouse_position (int position[2]) end
	
end
